<?xml version="1.0" encoding="UTF-8"?>
<highlightDefinition version="2.0">
	<name>ObjoScript</name>

	<!-- Generic block -->
	<blockStartMarker indent="1">\{\s*(?:$|#)</blockStartMarker>
	<blockEndMarker>^\s*\}</blockEndMarker>
	
	<!-- Symbol definitions -->
	<!-- Note that we strip `{` from the matched symbol name. We use the rTrim attribute to tell the
    editor to do this so we can avoid using expensive forward lookaheads in the regex patterns. -->
	<symbols>
		<symbol type="class">
			<entryRegEx>^\s*class [^ {]*</entryRegEx>
		</symbol>
		<symbol type="constructor" rTrim="{">
			<entryRegEx>^\s*constructor\s*\((?:\w|,|\s)*\)\s*\{</entryRegEx>
		</symbol>
		<symbol type="method" rTrim="{">
			<entryRegEx>^\s*(?!for\b|foreach|while|do|switch)(static\s*)?\w*=?\s*\(?(?:\w|,|\s)*\)?\s*\{</entryRegEx>
		</symbol>
		
		<symbol type="prefixOperator" rTrim="{">
			<entryRegEx>^\s*(static\s*)?([-~]|not)\s*\(\)\s*\{</entryRegEx>
		</symbol>
	
		<symbol type="infixOperator" rTrim="{">
			<entryRegEx>^\s*(static\s*)?(\&amp;|\.\.|\.\.\.|\/|\&gt;|\&gt;\=|\&gt;\&gt;|is|\&lt;|\&lt;\=|\&lt;\&lt;|\-|\&lt;\&lt;|\%|\||\+|\*)\s*\(\w+\)\s*\{</entryRegEx>
		</symbol>
	
		<symbol type="subscriptOperator" rTrim="{">
			<entryRegEx>^\s*(static\s*)?\[\w(?:\w|\,\s)+\]\s*\{</entryRegEx>
		</symbol>
		
		<symbol type="subscriptSetter" rTrim="{">
			<entryRegEx>^\s*(static\s*)?\[\w+\]\=\(\w+\)\s*\{</entryRegEx>
		</symbol>
	</symbols>
	
	<contexts caseSensitive="yes">		
		<highlightContext name="intrinsicType" fallback="type">
			<keywords>
				<string>Boolean</string>
				<string>KeyValue</string>
				<string>List</string>
				<string>Nothing</string>
				<string>Number</string>
				<string>String</string>
			</keywords>
		</highlightContext>
	
		<highlightContext name="keyword">
			<keywords>
				<string>and</string>
				<string>as</string>
				<string>assert</string>
				<string>breakpoint</string>
				<string>case</string>
				<string>class</string>
				<string>continue</string>
				<string>constructor</string>
				<string>do</string>
				<string>else</string>
				<string>exit</string>
				<string>export</string>
				<string>false</string>
				<string>for</string>
				<string>foreach</string>
				<string>foreign</string>
				<string>function</string>
				<string>if</string>
				<string>import</string>
				<string>in</string>
				<string>is</string>
				<string>loop</string>
				<string>not</string>
				<string>nothing</string>
				<string>or</string>
				<string>return</string>
				<string>static</string>
				<string>super</string>
				<string>switch</string>
				<string>then</string>
				<string>this</string>
				<string>true</string>
				<string>until</string>
				<string>var</string>
				<string>while</string>
				<string>xor</string>
			</keywords>
		</highlightContext>
		
		<highlightContext name="comment">
			<startRegEx>#</startRegEx>
			<endRegEx>[\n\r]</endRegEx>
		</highlightContext>
		
		<highlightContext name="number">
			<entryRegEx>(?&lt;=[^\w.]|^)(?=\d+|\d+\.|\.\d+|\d+e(?:\d|\b))((?:\d+_\d+)+|\d+|\d*\.\d*(?:e[-+]?\d*)?|\d+e[-+]?\d*)(?=[^\w.]|$)|(?&lt;=[^\w.]|^)(?:\d+|0x[[:xdigit:]]*\b|0b[01]*\b)(?=[^\w.]|$)</entryRegEx>
		</highlightContext>
		
		<highlightContext name="string">
			<entryRegEx>"[^"\r\n]*["\r\n]</entryRegEx>
		</highlightContext>
		
		<highlightContext name="uppercaseIdentifier" fallback="identifier">
			<entryRegEx>\b[A-Z]\w*</entryRegEx>
		</highlightContext>
		
		<highlightContext name="lowercaseIdentifier" fallback="identifier">
			<entryRegEx>\b[a-z]\w*</entryRegEx>
		</highlightContext>	
	</contexts>
	
</highlightDefinition>