<?xml version="1.0" encoding="UTF-8"?>
<highlightDefinition version="2.1">
	<name>PHP</name>

	<blockStartMarker indent="1">\{\s*(?:$|#)</blockStartMarker>
	<blockEndMarker>^\s*\}</blockEndMarker>
	
	<!-- Symbol definitions -->
	<!-- Note that we strip `{` from the matched symbol name. We use the rTrim attribute to tell the
    editor to do this so we can avoid using expensive forward lookaheads in the regex patterns. -->
	<symbols>
		<symbol type="class">
			<entryRegEx>^\s*class [^ {]*</entryRegEx>
		</symbol>
		<symbol type="constructor" rTrim="{">
			<entryRegEx>^\s*__construct\s*\((?:\w|,|\s)*\)\s*\{</entryRegEx>
		</symbol>
		<symbol type="method" rTrim="{">
			<entryRegEx>^\s*(?!for\b|foreach|while|do|switch)((static\s*)|(public\s*)|(protected\s*)|(private\s*))?\w*=?\s*\(?(?:\w|,|\s)*\)?\s*\{</entryRegEx>
		</symbol>
	</symbols>
	
	<contexts caseSensitive="no">
		<highlightContext name="phpTag" fallback="tag">
			<entryRegEx>&lt;\?php</entryRegEx>
		</highlightContext>
	
		<highlightContext name="phpSingleLineComment" fallback="comment">
			<startRegEx>\/\/</startRegEx>
			<endRegEx>[\n\r]</endRegEx>
		</highlightContext>
		
		<highlightContext name="phpHashComment" fallback="comment">
			<startRegEx>#</startRegEx>
			<endRegEx>[\n\r]</endRegEx>
		</highlightContext>
		
		<highlightContext name="phpBlockComment" fallback="comment">
			<startRegEx>/\*</startRegEx>
			<endRegEx>\*/</endRegEx>
		</highlightContext>
	
		<highlightContext name="phpSingleQuoteString" fallback="string">
			<startRegEx>'</startRegEx>
			<endRegEx>(((?&lt;!\\)(\\\\)*)|^)'</endRegEx>
		</highlightContext>
		
		<highlightContext name="phpDoubleQuoteString" fallback="string">
			<startRegEx>"</startRegEx>
			<endRegEx>(((?&lt;!\\)(\\\\)*)|^)"</endRegEx>
		</highlightContext>
		
		<highlightContext name="phpNumber" fallback="number">
			<entryRegEx>(?&lt;=[^\w.]|^)(?=\d+|\d+\.|\.\d+|\d+e(?:\d|\b))((?:\d+_\d+)+n?|\d+n?|\d*\.\d*(?:e[-+]?\d*)?|\d+e[-+]?\d*)(?=[^\w.]|$)|(?&lt;=[^\w.]|^)(?:\d+|0x[[:xdigit:]]*\b|0b[01]*\b|0o[0-7]*\b)(?=[^\w.]|$)</entryRegEx>
		</highlightContext>
	
		<highlightContext name="phpKeyword" fallback="keyword">
			<keywords>
				<string>__halt_compiler</string>
				<string>abstract</string>
				<string>and</string>
				<string>array</string>
				<string>as</string>
				<string>break</string>
				<string>callable</string>
				<string>case</string>
				<string>catch</string>
				<string>class</string>
				<string>clone</string>
				<string>const</string>
				<string>continue</string>
				<string>declare</string>
				<string>default</string>
				<string>die</string>
				<string>do</string>
				<string>echo</string>
				<string>else</string>
				<string>elseif</string>
				<string>empty</string>
				<string>enddeclare</string>
				<string>endfor</string>
				<string>endforeach</string>
				<string>endif</string>
				<string>endswitch</string>
				<string>endwhile</string>
				<string>eval</string>
				<string>exit</string>
				<string>extends</string>
				<string>final</string>
				<string>finally</string>
				<string>fn</string>
				<string>for</string>
				<string>foreach</string>
				<string>function</string>
				<string>global</string>
				<string>goto</string>
				<string>if</string>
				<string>implements</string>
				<string>include</string>
				<string>include_once</string>
				<string>instanceof</string>
				<string>insteadof</string>
				<string>interface</string>
				<string>isset</string>
				<string>list</string>
				<string>match</string>
				<string>namespace</string>
				<string>new</string>
				<string>or</string>
				<string>print</string>
				<string>private</string>
				<string>protected</string>
				<string>public</string>
				<string>readonly</string>
				<string>require</string>
				<string>require_once</string>
				<string>return</string>
				<string>static</string>
				<string>switch</string>
				<string>throw</string>
				<string>trait</string>
				<string>try</string>
				<string>unset</string>
				<string>use</string>
				<string>var</string>
				<string>while</string>
				<string>xor</string>
				<string>yield</string>
				<string>yield_from</string>
			</keywords>
		</highlightContext>
		
		<highlightContext name="phpUppercaseIdentifier" fallback="uppercaseIdentifier">
			<entryRegEx>\b[A-Z]\w*</entryRegEx>
		</highlightContext>
		
		<highlightContext name="phpLowercaseIdentifier" fallback="lowercaseIdentifier">
			<entryRegEx>\b[a-z]\w*</entryRegEx>
		</highlightContext>			
	</contexts>
</highlightDefinition>